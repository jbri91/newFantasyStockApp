[{"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js":"1","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js":"2","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js":"3","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js":"4","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js":"5","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js":"6","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js":"7","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js":"8","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js":"9","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js":"10"},{"size":218,"mtime":1611463770885,"results":"11","hashOfConfig":"12"},{"size":1887,"mtime":1620357546516,"results":"13","hashOfConfig":"12"},{"size":4289,"mtime":1620440796152,"results":"14","hashOfConfig":"12"},{"size":5251,"mtime":1620279919594,"results":"15","hashOfConfig":"12"},{"size":8408,"mtime":1620279919597,"results":"16","hashOfConfig":"12"},{"size":1098,"mtime":1617762932625,"results":"17","hashOfConfig":"12"},{"size":3686,"mtime":1620440665593,"results":"18","hashOfConfig":"12"},{"size":3416,"mtime":1620279919597,"results":"19","hashOfConfig":"12"},{"size":3730,"mtime":1620279919596,"results":"20","hashOfConfig":"12"},{"size":6550,"mtime":1620279919595,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wk3tjo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js",[],["46","47"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js",["48","49"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js",["50","51","52","53","54"],"import React from \"react\";\nfunction ReportPage() {\n\n\n  return (\n    <div className=\"App\">\n    Report Page (Not sure what I want to do with this yet!)\n    </div>\n  );\n}\n\nexport default ReportPage;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js",["55","56","57"],"import React, { useState, useEffect } from \"react\";\nimport StockCard from \"./StockCard\";\nimport StockModal from \"./StockModal\";\n\nfunction SummaryPage() {\n  const [buyingPower, setBuyingPower] = useState(20000);\n  const [purchasedStocks, setPurchasedStocks] = useState([]);\n  const [tesla, setTesla] = useState([]);\n  const [apple, setApple] = useState([]);\n  const [amazon, setAmazon] = useState([]);\n  const [microsoft, setMicrosoft] = useState([]);\n  const [stockPrice, setStockPrice] = useState(0);\n  const [stockName, setStockName] = useState(\"\");\n  const [dayChange, setDayChange] = useState(\"\");\n  const [percentageChange, setPercentageChange] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [stockId, setStockId] = useState(\"\");\n  const [searchStock, setSearchStock] = useState(\"\");\n  const [accountValue, setAccountValue] = useState(0);\n  const [sumofPurchasedStocks, setSumofPurchasedStocks] = useState(0);\n  const [profitDebt, setProfitDebt] = useState(0);\n\n  \n\n  // useEffect(() => {\n  //   setProfitDebt((accountValue - buyingPower).toFixed(2));\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"/api/sum\")\n      .then((res) => res.json())\n      .then((data) => setSumofPurchasedStocks(data));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/tesla\")\n      .then((res) => res.json())\n      .then((data) => setTesla(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/amazon\")\n      .then((res) => res.json())\n      .then((data) => setAmazon(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/microsoft\")\n      .then((res) => res.json())\n      .then((data) => setMicrosoft(data))\n      .catch((error) => console.log(error));\n  }, []);\n  useEffect(() => {\n    fetch(\"/api/apple\")\n      .then((res) => res.json())\n      .then((data) => setApple(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/purchased\")\n      .then((res) => res.json())\n      .then((data) => setPurchasedStocks(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    setAccountValue(\n      buyingPower + sumofPurchasedStocks\n    );\n  }, []);\n\n  useEffect(() => {\n    setBuyingPower(buyingPower)\n  }, [])\n\n  function handleSearch(e) {\n    console.log(e.target.value);\n    setSearchStock(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`/api/searchStock/${searchStock}`)\n      .then((res) => res.json())\n      .then((data) => setSearchStock(data))\n      .catch((error) => console.log(error));\n  }\n\n  let stocksPurchased = [];\n  for (let i = 0; i < purchasedStocks.length; i++) {\n    stocksPurchased.push(\n      <StockCard\n        key={purchasedStocks[i][0]}\n        stockId={purchasedStocks[i][0]}\n        symbol={purchasedStocks[i][1]}\n        stockName={purchasedStocks[i][2]}\n        price={purchasedStocks[i][3]}\n        dayChange={purchasedStocks[i][4]}\n        percentChange={purchasedStocks[i][5]}\n        time={purchasedStocks[i][6]}\n        setPrice={setStockPrice}\n        setStockName={setStockName}\n        setSymbol={setSymbol}\n        setDate={setDate}\n        setDayChange={setDayChange}\n        setPercentageChange={setPercentageChange}\n        setStockId={setStockId}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"grid\",\n          justifyContent: \"flex-start\",\n          marginLeft: \"10px\",\n          borderStyle: \"solid\",\n          width: \"400px\",\n          position: \"relative\",\n          top: \"-70px\",\n          left: \"-10px\",\n        }} \n      >\n        <h3>Buying Power: ${(buyingPower - sumofPurchasedStocks).toFixed(2)}</h3>\n        <h3>Account Value: ${accountValue}</h3>\n        <h3>Profit/Debt: ${profitDebt}</h3>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input onChange={handleSearch} placeholder=\"Search\" />\n      </form>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {searchStock.companyName ? (\n          <StockCard\n            symbol={searchStock.symbol}\n            stockName={searchStock.companyName}\n            price={searchStock.latestPrice}\n            dayChange={searchStock.change}\n            percentChange={searchStock.changePercent}\n            time={searchStock.latestTime}\n            setPrice={setStockPrice}\n            setStockName={setStockName}\n            setSymbol={setSymbol}\n            setDate={setDate}\n            setDayChange={setDayChange}\n            setPercentageChange={setPercentageChange}\n            setStockId={setStockId}\n          />\n        ) : null}\n      </div>\n      <h1 style={{ fontSize: \"30px\", marginTop: \"15px\" }}> Positions Cards </h1>\n      <header\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        {stocksPurchased}\n      </header>\n      <h1 style={{ fontSize: \"30px\", marginTop: \"15px\" }}> Popular Stocks </h1>\n      <div\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        <StockCard\n          symbol={tesla.symbol}\n          stockName={tesla.companyName}\n          price={tesla.latestPrice}\n          dayChange={tesla.change}\n          percentChange={tesla.changePercent}\n          time={tesla.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={amazon.symbol}\n          stockName={amazon.companyName}\n          price={amazon.latestPrice}\n          dayChange={amazon.change}\n          percentChange={amazon.changePercent}\n          time={amazon.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={apple.symbol}\n          stockName={apple.companyName}\n          price={apple.latestPrice}\n          dayChange={apple.change}\n          percentChange={apple.changePercent}\n          time={apple.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={microsoft.symbol}\n          stockName={microsoft.companyName}\n          price={microsoft.latestPrice}\n          dayChange={microsoft.change}\n          percentChange={microsoft.changePercent}\n          time={microsoft.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockModal\n          stockPrice={stockPrice}\n          stockName={stockName}\n          symbol={symbol}\n          dayChange={dayChange}\n          date={date}\n          percentageChange={percentageChange}\n          buyingPower={buyingPower}\n          sumofPurchasedStocks={sumofPurchasedStocks}\n          purchasedStocks={purchasedStocks}\n          setPurchasedStocks={setPurchasedStocks}\n          stockId={stockId}\n          buyingPower = {buyingPower}\n          setBuyingPower = {setBuyingPower}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryPage;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js",["58"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js",["59","60"],"import React, { useEffect, useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nfunction ReviewOrder(props) {\n  const { selected } = props;\n  // const [buyingStock, setBuyingStock] = useState(\"\");\n\n  console.log(props.stockId);\n  console.log(props.purchasedStocks);\n\n  function handlePlaceOrder() {\n    if (selected === \"Buy\") {\n      if (props.stockSum > props.buyingPower) {\n        alert(\"You do not have enough buy power!\");\n      } else {\n\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            symbol: props.symbol,\n            stockName: props.stockName,\n            price: props.stockPrice,\n            day_change: props.dayChange,\n            percentage_change: props.percentageChange,\n            date: props.date,\n          }),\n        };\n        fetch(\"/api/buystock\", requestOptions)\n          .then((res) => res.json())\n          .then((data) => console.log(data))\n          .catch((error) => console.log(error))\n          \n          fetch(\"/api/purchased\")\n          .then((res) => res.json())\n          .then((data) => props.setPurchasedStocks(data))\n          .catch((error) => console.log(error));\n          \n          props.setBuyingPower(props.buyingPower - props.stockSum)\n\n        }\n\n    \n    } else if (selected === \"Sell\") {\n      const requestOptions = {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          stock_id: props.stockId,\n        }),\n      };\n      fetch(\"/api/deleterow\", requestOptions).then(() =>\n        fetch(\"/api/purchased\")\n          .then((res) => res.json())\n          .then((data) => props.setPurchasedStocks(data))\n          .catch((error) => console.log(error))\n      );\n      props.setBuyingPower(props.buyingPower + props.stockSum)\n    }\n    fetch(\"/api/purchased\")\n      .then((res) => res.json())\n      .then((data) => props.setPurchasedStocks(data))\n      .catch((error) => console.log(error));\n\n  }\n\n  return (\n    <div>\n      <div\n        id=\"reviewModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Review Order </h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div\n              style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              className=\"modal-body\"\n            >\n              <div style={{ fontSize: \"20px\" }}>\n                <p>\n                  {props.selected} {props.quantity} shares of {props.symbol} (\n                  {props.stockName})\n                </p>\n                <p> Limit at ${props.stockPrice}</p>\n                <p>Estimated Total: ${props.stockSum}</p>\n                <p>\n                  {\" \"}\n                  Remaining Buy Power: $\n                  {props.selected === \"Buy\"\n                    ? ((props.buyingPower - props.sumofPurchasedStocks) - props.stockSum).toFixed(2)\n                    : ((props.buyingPower - props.sumofPurchasedStocks) + props.stockSum)}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ color: \"black\", fontWeight: \"bolder\" }}\n              onClick={handlePlaceOrder}\n              data-dismiss=\"modal\"\n            >\n              Place Order\n            </button>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewOrder;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"69","line":11,"column":11,"nodeType":"67","messageId":"68","endLine":11,"endColumn":17},{"ruleId":"65","severity":1,"message":"70","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":20},{"ruleId":"65","severity":1,"message":"71","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":23},{"ruleId":"65","severity":1,"message":"72","line":5,"column":25,"nodeType":"67","messageId":"68","endLine":5,"endColumn":41},{"ruleId":"73","severity":1,"message":"74","line":40,"column":6,"nodeType":"75","endLine":40,"endColumn":8,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":74,"column":32,"nodeType":"79","messageId":"80","endLine":74,"endColumn":34},{"ruleId":"65","severity":1,"message":"81","line":21,"column":10,"nodeType":"67","messageId":"68","endLine":21,"endColumn":30},{"ruleId":"65","severity":1,"message":"82","line":22,"column":22,"nodeType":"67","messageId":"68","endLine":22,"endColumn":35},{"ruleId":"73","severity":1,"message":"83","line":67,"column":6,"nodeType":"75","endLine":67,"endColumn":8,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"78","line":47,"column":26,"nodeType":"79","messageId":"80","endLine":47,"endColumn":28},{"ruleId":"65","severity":1,"message":"85","line":7,"column":11,"nodeType":"67","messageId":"68","endLine":7,"endColumn":22},{"ruleId":"73","severity":1,"message":"86","line":14,"column":3,"nodeType":"67","endLine":14,"endColumn":12,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","'allSymbols' is assigned a value but never used.","'totalInvested' is assigned a value but never used.","'setTotalInvested' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'sumofPurchasedStocks' is assigned a value but never used.","'setProfitDebt' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'sumOfAllStocksPurchased' and 'userId'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAccountValue' needs the current value of 'sumOfAllStocksPurchased'.",["91"],"'setQuantity' is assigned a value but never used.","React Hook useEffect contains a call to 'setShares'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [purchasedStocks, stockId] as a second argument to the useEffect Hook.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [userId]",{"range":"99","text":"100"},"Update the dependencies array to be: [sumOfAllStocksPurchased, userId]",{"range":"101","text":"102"},"Add dependencies array: [purchasedStocks, stockId]",{"range":"103","text":"104"},[1429,1431],"[userId]",[2661,2663],"[sumOfAllStocksPurchased, userId]",[565,565],", [purchasedStocks, stockId]"]