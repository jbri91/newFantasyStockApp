[{"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js":"1","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js":"2","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js":"3","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js":"4","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js":"5","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js":"6","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js":"7","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js":"8","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js":"9","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js":"10"},{"size":218,"mtime":1611463770885,"results":"11","hashOfConfig":"12"},{"size":938,"mtime":1612727361940,"results":"13","hashOfConfig":"12"},{"size":1098,"mtime":1617762932625,"results":"14","hashOfConfig":"12"},{"size":7682,"mtime":1618283639458,"results":"15","hashOfConfig":"12"},{"size":2253,"mtime":1618290217889,"results":"16","hashOfConfig":"12"},{"size":3252,"mtime":1617762932626,"results":"17","hashOfConfig":"12"},{"size":3600,"mtime":1618282860836,"results":"18","hashOfConfig":"12"},{"size":1875,"mtime":1617762932624,"results":"19","hashOfConfig":"12"},{"size":3342,"mtime":1618178555082,"results":"20","hashOfConfig":"12"},{"size":4077,"mtime":1618280939879,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wk3tjo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js",[],["47","48"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js",["49","50","51","52"],"import React, { useState, useEffect } from \"react\";\nimport StockCard from \"./StockCard\";\nimport StockModal from \"./StockModal\";\n\nfunction SummaryPage() {\n  const [buyingPower, setBuyingPower] = useState(20000);\n  const [purchasedStocks, setPurchasedStocks] = useState([]);\n  const [tesla, setTesla] = useState([]);\n  const [apple, setApple] = useState([]);\n  const [amazon, setAmazon] = useState([]);\n  const [microsoft, setMicrosoft] = useState([]);\n  const [stockPrice, setStockPrice] = useState(0);\n  const [stockName, setStockName] = useState(\"\");\n  const [dayChange, setDayChange] = useState(\"\");\n  const [percentageChange, setPercentageChange] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [stockId, setStockId] = useState(\"\");\n  const [searchStock, setSearchStock] = useState(\"\");\n  const [accountValue, setAccountValue] = useState(0);\n  const [sumofPurchasedStocks, setSumofPurchasedStocks] = useState(0);\n  const [profitDebt, setProfitDebt] = useState(0);\n\n  \n\n  // useEffect(() => {\n  //   setProfitDebt((accountValue - buyingPower).toFixed(2));\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"/api/sum\")\n      .then((res) => res.json())\n      .then((data) => setSumofPurchasedStocks(data));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/tesla\")\n      .then((res) => res.json())\n      .then((data) => setTesla(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/amazon\")\n      .then((res) => res.json())\n      .then((data) => setAmazon(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/microsoft\")\n      .then((res) => res.json())\n      .then((data) => setMicrosoft(data))\n      .catch((error) => console.log(error));\n  }, []);\n  useEffect(() => {\n    fetch(\"/api/apple\")\n      .then((res) => res.json())\n      .then((data) => setApple(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/purchased\")\n      .then((res) => res.json())\n      .then((data) => setPurchasedStocks(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    setAccountValue(\n      buyingPower + sumofPurchasedStocks\n    );\n  }, []);\n\n  useEffect(() => {\n    setBuyingPower(buyingPower)\n  }, [])\n\n  function handleSearch(e) {\n    setSearchStock(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`/api/searchStock/${searchStock}`)\n      .then((res) => res.json())\n      .then((data) => setSearchStock(data))\n      .catch((error) => console.log(error));\n  }\n\n  let stocksPurchased = [];\n  for (let i = 0; i < purchasedStocks.length; i++) {\n    stocksPurchased.push(\n      <StockCard\n        key={purchasedStocks[i][0]}\n        stockId={purchasedStocks[i][0]}\n        symbol={purchasedStocks[i][1]}\n        stockName={purchasedStocks[i][2]}\n        price={purchasedStocks[i][3]}\n        dayChange={purchasedStocks[i][4]}\n        percentChange={purchasedStocks[i][5]}\n        time={purchasedStocks[i][6]}\n        setPrice={setStockPrice}\n        setStockName={setStockName}\n        setSymbol={setSymbol}\n        setDate={setDate}\n        setDayChange={setDayChange}\n        setPercentageChange={setPercentageChange}\n        setStockId={setStockId}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"grid\",\n          justifyContent: \"flex-start\",\n          marginLeft: \"10px\",\n          borderStyle: \"solid\",\n          width: \"400px\",\n          position: \"relative\",\n          top: \"-70px\",\n          left: \"-10px\",\n        }} \n      >\n        <h3>Buying Power: ${(buyingPower - sumofPurchasedStocks).toFixed(2)}</h3>\n        <h3>Account Value: ${accountValue}</h3>\n        <h3>Profit/Debt: ${profitDebt}</h3>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input onChange={handleSearch} placeholder=\"Search\" />\n      </form>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {searchStock.companyName ? (\n          <StockCard\n            symbol={searchStock.symbol}\n            stockName={searchStock.companyName}\n            price={searchStock.latestPrice}\n            dayChange={searchStock.change}\n            percentChange={searchStock.changePercent}\n            time={searchStock.latestTime}\n            setPrice={setStockPrice}\n            setStockName={setStockName}\n            setSymbol={setSymbol}\n            setDate={setDate}\n            setDayChange={setDayChange}\n            setPercentageChange={setPercentageChange}\n            setStockId={setStockId}\n          />\n        ) : null}\n      </div>\n      <h1 style={{ fontSize: \"30px\", marginTop: \"15px\" }}> Positions Cards </h1>\n      <header\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        {stocksPurchased}\n      </header>\n      <h1 style={{ fontSize: \"30px\", marginTop: \"15px\" }}> Popular Stocks </h1>\n      <div\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        <StockCard\n          symbol={tesla.symbol}\n          stockName={tesla.companyName}\n          price={tesla.latestPrice}\n          dayChange={tesla.change}\n          percentChange={tesla.changePercent}\n          time={tesla.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={amazon.symbol}\n          stockName={amazon.companyName}\n          price={amazon.latestPrice}\n          dayChange={amazon.change}\n          percentChange={amazon.changePercent}\n          time={amazon.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={apple.symbol}\n          stockName={apple.companyName}\n          price={apple.latestPrice}\n          dayChange={apple.change}\n          percentChange={apple.changePercent}\n          time={apple.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={microsoft.symbol}\n          stockName={microsoft.companyName}\n          price={microsoft.latestPrice}\n          dayChange={microsoft.change}\n          percentChange={microsoft.changePercent}\n          time={microsoft.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockModal\n          stockPrice={stockPrice}\n          stockName={stockName}\n          symbol={symbol}\n          dayChange={dayChange}\n          date={date}\n          percentageChange={percentageChange}\n          buyingPower={buyingPower}\n          sumofPurchasedStocks={sumofPurchasedStocks}\n          purchasedStocks={purchasedStocks}\n          setPurchasedStocks={setPurchasedStocks}\n          stockId={stockId}\n          buyingPower = {buyingPower}\n          setBuyingPower = {setBuyingPower}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryPage;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js",["53"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js",["54"],"import React, { useEffect, useState } from 'react'\n\nfunction CreateAccount() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    // const [copyPassword, setCopyPassword] = useState('');   \n\n\n    function handleUsername(e) {\n        setUsername(e.target.value)\n    };\n\nfunction handlePassword(e) {\n    setPassword(e.target.value) \n};\n\n// function handleCopyPassword(e) {\n//     setCopyPassword(e.target.value)\n// };\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type' : 'application/json'},\n        body: JSON.stringify({\n            username : username,\n            password : password\n        })\n    };\n    fetch('api/createaccount', requestOptions)\n    .then(res => res.json())\n    .then(data => console.log(data))\n    .catch(error => console.log(error));\n}\n\n\n\n    return(\n        <div style={{ \n            border: '15px solid grey',\n            width: '400px',\n            padding: '50px',\n            margin: '0 auto',\n            display: 'flex',\n            \n        }}>\n            \n            <div className='form-group' >\n            <h1 className='display-6' style={{marginBottom:'70px'}}>Create An Account</h1>\n            <form onSubmit={handleSubmit}>\n            <input className='form-control'  onChange={handleUsername} style={{marginBottom:'20px'}} placeholder='Username'/>\n            <input className='form-control' onChange={handlePassword} type='password' style={{marginBottom:'20px'}} placeholder='Password'/>\n            <input className='form-control' type='password' style={{marginBottom:'20px'}} placeholder='Re-type Password'/>\n            <button type='submit'  className='btn btn-info' >Create Account</button>\n            </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateAccount","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js",["55"],"import React, { useState } from \"react\";\nimport ReviewOrder from \"./ReviewOrder\";\n\nfunction StockModal(props) {\n  const [selected, setSelected] = useState(\"\");\n  const [quantity, setQuantity] = useState([]);\n  const [stockSum, setStockSum] = useState([]);\n\n  function handleStockSum() {\n    if (quantity <= 0 || selected === \"\" || selected === 'Select') {\n      console.log('Please Fill Out All Fields')\n    } else {\n      let price = props.stockPrice;\n      setStockSum(price * quantity);\n    }\n  }\n\n  function handleSelectChange(e) {\n    setSelected(e.target.value);\n  }\n\n  function handleQuantityChange(e) {\n    setQuantity(e.target.value);\n  }\n\n  return (\n    <div\n      id=\"stockModal\"\n      className=\"modal fade\"\n      role=\"dialog\"\n      style={{ color: \"black\" }}\n    >\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title\"> Buy/Sell Stock</h4>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n              &times;\n            </button>\n          </div>\n          <div\n            style={{ display: \"flex\", justifyContent: \"space-around\" }}\n            className=\"modal-body\"\n          >\n            <div>\n              <p style={{ marginBottom: \"0px\" }}>Action</p>\n              <select\n                name=\"trade\"\n                id=\"trade\"\n                value={selected}\n                onChange={handleSelectChange}\n              >\n                <option value=\"Select\"> --Select-- </option>\n                <option value=\"Buy\"> Buy </option>\n                <option value=\"Sell\"> Sell </option>\n              </select>\n            </div>\n            <div>\n              <p style={{ marginBottom: \"0px\" }}>Quanity</p>\n              <input\n                type=\"number\"\n                style={{ width: \"100px\", height: \"32px\" }}\n                onChange={handleQuantityChange}\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-info\"\n            style={{ color: \"black\", fontWeight: \"bolder\" }}\n            data-toggle=\"modal\"\n            data-target=\"#reviewModal\"\n            onClick={handleStockSum}\n          >\n            Review Order\n          </button>\n          <div\n            className=\"modal-footer\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-default\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      <ReviewOrder\n        stockSum={stockSum}\n        stockPrice={props.stockPrice}\n        stockName={props.stockName}\n        symbol={props.symbol}\n        stockId={props.stockId}\n        dayChange={props.dayChange}\n        percentageChange={props.percentageChange}\n        date={props.date}\n        quantity={quantity}\n        selected={selected}\n        buyingPower={props.buyingPower}\n        sumofPurchasedStocks={props.sumofPurchasedStocks}\n        purchasedStocks={props.purchasedStocks}\n        setPurchasedStocks={props.setPurchasedStocks}\n        buyingPower = {props.buyingPower}\n        setBuyingPower = {props.setBuyingPower}\n      />\n    </div>\n  );\n}\n\nexport default StockModal;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js",["56","57","58"],"import React, { useEffect, useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nfunction ReviewOrder(props) {\n  const { selected } = props;\n  // const [buyingStock, setBuyingStock] = useState(\"\");\n\n  function handlePlaceOrder() {\n    if (selected === \"Buy\") {\n      if (props.stockSum > props.buyingPower) {\n        alert(\"You do not have enough buy power!\");\n      } else {\n\n        console.log(props.quantity)\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            symbol: props.symbol,\n            stockName: props.stockName,\n            price: props.stockPrice,\n            day_change: props.dayChange,\n            percentage_change: props.percentageChange,\n            date: props.date,\n          }),\n        }\n        fetch(\"/api/buystock\", requestOptions)\n          .then((res) => res.json())\n          .then((data) => console.log(data))\n          .catch((error) => console.log(error))\n          \n          fetch(\"/api/purchased\")\n          .then((res) => res.json())\n          .then((data) => props.setPurchasedStocks(data))\n          .catch((error) => console.log(error));\n          \n          props.setBuyingPower(props.buyingPower - props.stockSum)\n\n        }\n\n    \n    } else if (selected === \"Sell\") {\n\n      const requestOptions = {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          stock_id: props.stockId,\n        }),\n      };\n      fetch(\"/api/deleterow\", requestOptions).then(() =>\n        fetch(\"/api/purchased\")\n          .then((res) => res.json())\n          .then((data) => props.setPurchasedStocks(data))\n          .catch((error) => console.log(error))\n      );\n      props.setBuyingPower(props.buyingPower + props.stockSum)\n    }\n    fetch(\"/api/purchased\")\n      .then((res) => res.json())\n      .then((data) => props.setPurchasedStocks(data))\n      .catch((error) => console.log(error));\n\n  }\n\n  return (\n    <div>\n      <div\n        id=\"reviewModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Review Order </h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div\n              style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              className=\"modal-body\"\n            >\n              <div style={{ fontSize: \"20px\" }}>\n                <p>\n                  {props.selected} {props.quantity} shares of {props.symbol} (\n                  {props.stockName})\n                </p>\n                <p> Limit at ${props.stockPrice}</p>\n                <p>Estimated Total: ${props.stockSum}</p>\n                <p>\n                  {\" \"}\n                  Remaining Buy Power: $\n                  {props.selected === \"Buy\"\n                    ? ((props.buyingPower - props.sumofPurchasedStocks) - props.stockSum).toFixed(2)\n                    : ((props.buyingPower - props.sumofPurchasedStocks) + props.stockSum)}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ color: \"black\", fontWeight: \"bolder\" }}\n              onClick={handlePlaceOrder}\n              data-dismiss=\"modal\"\n            >\n              Place Order\n            </button>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewOrder;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":22,"column":22,"nodeType":"65","messageId":"66","endLine":22,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":74,"column":6,"nodeType":"69","endLine":74,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":78,"column":6,"nodeType":"69","endLine":78,"endColumn":8,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":237,"column":11,"nodeType":"75","endLine":237,"endColumn":38},{"ruleId":"67","severity":1,"message":"76","line":46,"column":6,"nodeType":"69","endLine":46,"endColumn":8,"suggestions":"77"},{"ruleId":"63","severity":1,"message":"78","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":106,"column":9,"nodeType":"75","endLine":106,"endColumn":42},{"ruleId":"63","severity":1,"message":"78","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"79","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"80","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":15},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'setProfitDebt' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buyingPower' and 'sumofPurchasedStocks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAccountValue' needs the current value of 'buyingPower'.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'buyingPower'. Either include it or remove the dependency array. You can also do a functional update 'setBuyingPower(b => ...)' if you only need 'buyingPower' in the 'setBuyingPower' call.",["84"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'totalInvested' and 'totalPortfolioSum'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPortfolioPercentage' needs the current value of 'totalInvested'.",["85"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [buyingPower, sumofPurchasedStocks]",{"range":"92","text":"93"},"Update the dependencies array to be: [buyingPower]",{"range":"94","text":"95"},"Update the dependencies array to be: [totalInvested, totalPortfolioSum]",{"range":"96","text":"97"},[2244,2246],"[buyingPower, sumofPurchasedStocks]",[2307,2309],"[buyingPower]",[1280,1282],"[totalInvested, totalPortfolioSum]"]