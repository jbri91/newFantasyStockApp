[{"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js":"1","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js":"2","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js":"3","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js":"4","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js":"5","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js":"6","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js":"7","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js":"8","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js":"9","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js":"10"},{"size":218,"mtime":1611463770885,"results":"11","hashOfConfig":"12"},{"size":1887,"mtime":1620955865690,"results":"13","hashOfConfig":"12"},{"size":4457,"mtime":1620960931717,"results":"14","hashOfConfig":"12"},{"size":5251,"mtime":1620279919594,"results":"15","hashOfConfig":"12"},{"size":9345,"mtime":1620955719770,"results":"16","hashOfConfig":"12"},{"size":1098,"mtime":1617762932625,"results":"17","hashOfConfig":"12"},{"size":3693,"mtime":1620955886631,"results":"18","hashOfConfig":"12"},{"size":3395,"mtime":1620710374321,"results":"19","hashOfConfig":"12"},{"size":3905,"mtime":1620961249673,"results":"20","hashOfConfig":"12"},{"size":6594,"mtime":1620877853444,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wk3tjo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js",[],["46","47"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js",["48"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js",["49","50","51","52","53"],"import React from \"react\";\nfunction ReportPage() {\n\n\n  return (\n    <div className=\"App\">\n    Report Page (Not sure what I want to do with this yet!)\n    </div>\n  );\n}\n\nexport default ReportPage;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js",["54","55","56","57"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js",["58"],"import React, { useState } from \"react\";\n\nfunction CreateAccount() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [passwordRequirements, setPasswordRequirements] = useState(\"\");\n  const [copyPassword, setCopyPassword] = useState(\"\");\n  const [noMatch, setNoMatch] = useState(\"\");\n  const [fieldsCheck, setFieldsCheck] = useState(\"\");\n\n  function handleUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleCopyPassword(e) {\n    setCopyPassword(e.target.value);\n  }\n\n  console.log(copyPassword);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    };\n\n    let checkPassword = password;\n    let regex = new RegExp(/[A-Z]/ && /[0-9]/);\n    let result = regex.test(checkPassword);\n\n    console.log(result);\n    if (username && password) {\n      setFieldsCheck(\"\");\n      if ((password.length > 8, result)) {\n        setNoMatch(\"\");\n        setPasswordRequirements(\"\");\n        if (copyPassword == password) {\n          setNoMatch(\"\");\n          fetch(\"api/createaccount\", requestOptions)\n            .then((res) => res.json())\n            .then((data) => console.log(data))\n            .catch((error) => setError(error));\n\n          // window.location.href = \"/\";\n        } else {\n          setNoMatch(\n            <p style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n              Password does not match\n            </p>\n          );\n        }\n      } else {\n        setPasswordRequirements(\n          <ul style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n            <li>Password must be 8 or more characters</li>\n            <li>Password must have atleast one uppercase letter</li>\n            <li>Password must have atleast one Number</li>\n          </ul>\n        );\n      }\n    } else {\n      setFieldsCheck(\n        <p style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n          Please Fill In All Fields\n        </p>\n      );\n    }\n  }\n\n  return (\n    <div\n      style={{\n        border: \"15px solid grey\",\n        width: \"400px\",\n        padding: \"50px\",\n        margin: \"0 auto\",\n        display: \"flex\",\n      }}\n    >\n      <div className=\"form-group\">\n        <h1 className=\"display-6\" style={{ marginBottom: \"70px\" }}>\n          Create An Account\n        </h1>\n        <form onSubmit={handleSubmit}>\n          {fieldsCheck}\n          <input\n            className=\"form-control\"\n            onChange={handleUsername}\n            style={{ marginBottom: \"20px\" }}\n            placeholder=\"Username\"\n          />\n          {error ? (\n            <p style={{ fontSize: \"15px\", color: \"red\" }}>\n              Username is already taken\n            </p>\n          ) : null}\n          <input\n            className=\"form-control\"\n            onChange={handlePassword}\n            type=\"password\"\n            style={{ marginBottom: \"20px\" }}\n            placeholder=\"Password\"\n          />\n          <input\n            className=\"form-control\"\n            onChange={handleCopyPassword}\n            type=\"password\"\n            style={{ marginBottom: \"20px\" }}\n            placeholder={\"Re-type Password\"}\n          />\n          {noMatch}\n          {passwordRequirements}\n          <button type=\"submit\" className=\"btn btn-info\">\n            Create Account\n          </button>\n        </form>\n      </div>    \n    </div>\n  );\n}\n\nexport default CreateAccount;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js",["59","60"],"import React, { useEffect, useState } from \"react\";\n\nfunction ReviewOrder(props) {\n  const { selected } = props;\n  const { quantity } = props;\n  const { stockId } = props;\n  const { setQuantity } = props;\n  const { purchasedStocks } = props;\n  const { userId } = props;\n  const { buyingPower } = props;\n  const { setBuyingPower } = props;\n  const [shares, setShares] = useState([]);\n\n  useEffect(() => {\n    for (let i = 0; i < purchasedStocks.length; i++) {\n      if (stockId === purchasedStocks[i][0]) {\n        setShares(purchasedStocks[i][7]);\n      }\n    }\n  });\n\n  function handlePlaceOrder() {\n    let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + props.stockSum;\n    const sellStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: sellingStock,\n      }),\n    };\n\n    const buyStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: boughtStock.toFixed(2),\n      }),\n    };\n\n    if (selected === \"Buy\") {\n      if (props.stockSum > buyingPower) {\n        alert(\"You do not have enough buy power!\");\n      } else {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            symbol: props.symbol,\n            stockName: props.stockName,\n            price: props.stockPrice,\n            day_change: props.dayChange,\n            percentage_change: props.percentageChange,\n            date: props.date,\n            shares: quantity,\n            userId: parseInt(userId),\n            initialPrice: props.stockPrice,\n          }),\n        };\n        fetch(\"/api/buystock\", requestOptions).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", buyStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      }\n    } else if (selected === \"Sell\") {\n      let soldStock = shares - quantity;\n      if (soldStock >= 1) {\n        const requestOptions = {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            shares: soldStock,\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/updatestocks\", requestOptions)\n          .then((res) => res.json())\n          .then((data) =>\n            fetch(`/api/purchased/${userId}`)\n              .then((res) => res.json())\n              .then((data) => props.setPurchasedStocks(data))\n              .catch((error) => console.log(error))\n          );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      } else {\n        const deleteStocks = {\n          method: \"DELETE\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/deleterow\", deleteStocks).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n        );\n      }\n    }\n  }\n\n  let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + Number(props.stockSum);\n  return (\n    <div>\n      <div\n        id=\"reviewModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Review Order </h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div\n              style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              className=\"modal-body\"\n            >\n              <div style={{ fontSize: \"20px\" }}>\n                <p>\n                  {props.selected} {props.quantity} shares of {props.symbol} (\n                  {props.stockName})\n                </p>\n                <p> Limit at ${props.stockPrice}</p>\n                <p>Estimated Total: ${props.stockSum}</p>\n                <p>\n                  {\" \"}\n                  Remaining Buy Power: $\n                  {props.selected === \"Buy\"\n                    ? boughtStock.toFixed(2)\n                    : sellingStock.toFixed(2)}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ color: \"black\", fontWeight: \"bolder\" }}\n              onClick={handlePlaceOrder}\n              data-dismiss=\"modal\"\n            >\n              Place Order\n            </button>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewOrder;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":12,"column":11,"nodeType":"67","messageId":"68","endLine":12,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":23},{"ruleId":"65","severity":1,"message":"71","line":5,"column":25,"nodeType":"67","messageId":"68","endLine":5,"endColumn":41},{"ruleId":"72","severity":1,"message":"73","line":40,"column":6,"nodeType":"74","endLine":40,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":74,"column":32,"nodeType":"78","messageId":"79","endLine":74,"endColumn":34},{"ruleId":"65","severity":1,"message":"80","line":23,"column":10,"nodeType":"67","messageId":"68","endLine":23,"endColumn":22},{"ruleId":"65","severity":1,"message":"81","line":23,"column":24,"nodeType":"67","messageId":"68","endLine":23,"endColumn":39},{"ruleId":"65","severity":1,"message":"82","line":26,"column":22,"nodeType":"67","messageId":"68","endLine":26,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":93,"column":6,"nodeType":"74","endLine":93,"endColumn":8,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":47,"column":26,"nodeType":"78","messageId":"79","endLine":47,"endColumn":28},{"ruleId":"65","severity":1,"message":"84","line":7,"column":11,"nodeType":"67","messageId":"68","endLine":7,"endColumn":22},{"ruleId":"72","severity":1,"message":"85","line":14,"column":3,"nodeType":"67","endLine":14,"endColumn":12,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","'allSymbols' is assigned a value but never used.","'totalInvested' is assigned a value but never used.","'setTotalInvested' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'initialPrice' is assigned a value but never used.","'setInitialPrice' is assigned a value but never used.","'setProfitDebt' is assigned a value but never used.",["90"],"'setQuantity' is assigned a value but never used.","React Hook useEffect contains a call to 'setShares'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [purchasedStocks, stockId] as a second argument to the useEffect Hook.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"92","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [userId]",{"range":"97","text":"98"},{"range":"99","text":"98"},"Add dependencies array: [purchasedStocks, stockId]",{"range":"100","text":"101"},[1429,1431],"[userId]",[3468,3470],[565,565],", [purchasedStocks, stockId]"]