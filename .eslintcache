[{"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js":"1","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js":"2","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js":"3","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js":"4","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js":"5","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js":"6","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js":"7","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js":"8","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js":"9","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js":"10"},{"size":218,"mtime":1611463770885,"results":"11","hashOfConfig":"12"},{"size":2270,"mtime":1621106027129,"results":"13","hashOfConfig":"12"},{"size":4457,"mtime":1621106027131,"results":"14","hashOfConfig":"12"},{"size":5295,"mtime":1621106027132,"results":"15","hashOfConfig":"12"},{"size":9655,"mtime":1621106027136,"results":"16","hashOfConfig":"12"},{"size":1098,"mtime":1617762932625,"results":"17","hashOfConfig":"12"},{"size":3793,"mtime":1621106027130,"results":"18","hashOfConfig":"12"},{"size":3395,"mtime":1621106027135,"results":"19","hashOfConfig":"12"},{"size":3917,"mtime":1621106027134,"results":"20","hashOfConfig":"12"},{"size":6613,"mtime":1621106027133,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wk3tjo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js",[],["48","49"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js",["50"],"import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport bullMarketIcon from \"../images/bullMarketIcon.png\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nfunction NavigationBar(props) {\n  let history = useHistory();\n  let { setAuthentication } = props;\n  let { authentication } = props;\n  const { setUserId } = props;\n  const { userId } = props;\n  const [usernameCredential, setUsernameCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleUsername(event) {\n    setUsernameCredential(event.target.value);\n  }\n\n  function handlePassword(event) {\n    setPassword(event.target.value);\n  }\n\n  const handleCredentials = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        usernameCredential: usernameCredential,\n        password: password,\n      }),\n    };\n    fetch(\"/api/username\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => setAuthentication(data[1]) & setUserId(data[0]));\n  };\n\n  let handleAuthentication = () => {\n    setAuthentication(false);\n  };\n\n  console.log(authentication);\n  authentication ? history.push(\"/summary\") : console.log(\"Please Login\");\n\n  return (\n    <div style={{ marginBottom: \"70px\" }}>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">\n          <img src={bullMarketIcon} alt=\"Bull Market\" />\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n            }}\n          >\n            <NavLink style={{ color: \"gray\" }} to=\"/\" href=\"home\">\n              Home|\n            </NavLink>\n            <NavLink style={{ color: \"gray\" }} to=\"/report\" href=\"reportPage\">\n              Report|\n            </NavLink>\n            <NavLink style={{ color: \"gray\" }} to=\"/summary\" href=\"summaryPage\">\n              Summary\n            </NavLink>\n          </div>\n        </Nav>\n        <div style={{ marginRight: \"20px\" }}>\n          {authentication ? \"Welcome \" + usernameCredential : null}\n        </div>\n        {authentication ? (\n          <button\n            style={{ color: \"black\" }}\n            className=\"btn btn-info btn-lg\"\n            onClick={handleAuthentication}\n          >\n            Log Out\n          </button>\n        ) : (\n          <button\n            style={{ color: \"black\" }}\n            className=\"btn btn-info btn-lg\"\n            data-toggle=\"modal\"\n            data-target=\"#myModal\"\n            href=\"#login\"\n          >\n            Login/Register\n          </button>\n        )}\n      </Navbar>\n\n      <div\n        id=\"myModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Log in to your account</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <input placeholder=\"User ID\" onChange={handleUsername} />\n                <input\n                  placeholder=\"Password\"\n                  onChange={handlePassword}\n                  type=\"password\"\n                />\n              </div>\n            </div>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <NavLink\n                to=\"/createAccount\"\n                href=\"createAccount\"\n                className=\"btn btn-link\"\n              >\n                Create Account\n              </NavLink>\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                style={{\n                  backgroundColor: \"lightblue\",\n                  border: \"solid\",\n                  borderColor: \"skyblue\",\n                }}\n                onClick={handleCredentials}\n                data-dismiss=\"modal\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NavigationBar;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js",["51","52","53","54","55"],"import React, { useEffect, useState } from \"react\";\nfunction ReportPage(props) {\n  const [allSymbols, setAllSymbols] = useState([]);\n  const [numberShares, setNumberShares] = useState([]);\n  const [totalInvested, setTotalInvested] = useState([]);\n  const [totalPortfolioSum, setTotalPortfolioSum] = useState([]);\n  const [stockReport, setStockReport] = useState([]);\n  const { userId } = props;\n  const [buyingPower, setBuyingPower] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`/api/allsymbols/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setAllSymbols(data))\n      .catch((error) => console.log(error));\n    fetch(`/api/shares/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setNumberShares(data))\n      .catch((error) => console.log(error));\n    fetch(`/api/totalPortfolio/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setTotalPortfolioSum(data))\n      .catch((error) => console.log(error));\n\n    fetch(`/api/stockreport/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setStockReport(data))\n      .catch((error) => console.log(error));\n\n    fetch(\"/api/userbalance\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: userId,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setBuyingPower(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  function handleDelete(e) {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        stock_symbol: e.target.id,\n        userId: parseInt(userId),\n      }),\n    };\n    fetch(\"/api/deleteall\", requestOptions).then((res) => {\n      fetch(`/api/allsymbols/${userId}`)\n        .then((res) => res.json())\n        .then((data) => setAllSymbols(data))\n        .catch((error) => console.log(error));\n      fetch(`/api/stockreport/${userId}`)\n        .then((res) => res.json())\n        .then((data) => setStockReport(data))\n        .catch((error) => console.log(error));\n      fetch(`/api/shares/${userId}`)\n        .then((res) => res.json())\n        .then((data) => setNumberShares(data))\n        .catch((error) => console.log(error));\n      fetch(`/api/totalPortfolio/${userId}`)\n        .then((res) => res.json())\n        .then((data) => setTotalPortfolioSum(data))\n        .catch((error) => console.log(error));\n\n        // Total of deleted Symbol\n        console.log(e.target.id) \n        // 'TSLA'\n        let amountInvested = -1;\n        for(let i =0; i < stockReport.length; i++){\n          if(stockReport[i][0] == e.target.id) {\n            amountInvested = stockReport[i][2] * stockReport[i][1];\n            break;\n          }\n        }\n        console.log(stockReport)\n        console.log(amountInvested)\n        let updatedBalance = Number(buyingPower) + amountInvested\n        console.log(amountInvested, updatedBalance)\n        // setBuyingPower(updatedBalance)\n        fetch('/api/boughtstock', {\n          method: 'PUT',\n          headers: { 'Content-Type' : 'application/json' },\n          body: JSON.stringify({\n            userId: parseInt(userId),\n            boughtStock: updatedBalance.toFixed(2),\n          })\n        })\n       \n        // Add to buyingPower\n        // Update buying Power in database for User\n        \n      let stockRows = [];\n      for (let i = 0; i < numberShares.length; i++) {\n        stockRows.push(\n          <tr key={i}>\n            <td> {stockReport[i][0]} </td>\n            <td> {stockReport[i][1]} </td>\n            <td> ${(stockReport[i][1] * stockReport[i][2]).toFixed(2)} </td>\n            <td>\n              {\" \"}\n              {((stockReport[i][2] / totalPortfolioSum) * 100).toFixed(\n                2\n              )}%{\" \"}\n            </td>\n            <td>\n              <button\n                id={stockReport[i][0]}\n                type=\"button\"\n                onClick={handleDelete}\n                className=\"btn btn-secondary\"\n              >\n                Sell All\n              </button>\n            </td>\n          </tr>\n        );\n      }\n    });\n  }\n\n\n  let stockRows = [];\n  for (let i = 0; i < stockReport.length; i++) {\n    stockRows.push(\n      <tr key={i}>\n        <td> {stockReport[i][0]} </td>\n        <td> {stockReport[i][1]} </td>\n        <td> ${(stockReport[i][1] * stockReport[i][2]).toFixed(2)} </td>\n        <td>\n          {\" \"}\n          {((stockReport[i][2] / totalPortfolioSum) * 100).toFixed(2)}%{\" \"}\n        </td>\n        <td>\n          <button\n            id={stockReport[i][0]}\n            type=\"button\"\n            onClick={handleDelete}\n            className=\"btn btn-secondary\"\n          >\n            Sell All\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <table style={{ color: \"white\" }} className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Symbol</th>\n            <th scope=\"col\">Shares</th>\n            <th scope=\"col\">Total Invested</th>\n            <th scope=\"col\"> % of Your Portfolio</th>\n            <th>Quick Sell</th>\n          </tr>\n        </thead>\n        <tbody>{stockRows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ReportPage;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js",["56","57","58","59","60"],"import React, { useState, useEffect } from \"react\";\nimport StockCard from \"./StockCard\";\nimport StockModal from \"./StockModal\";\n\nfunction SummaryPage(props) {\n  const [buyingPower, setBuyingPower] = useState([]);\n  const [purchasedStocks, setPurchasedStocks] = useState([]);\n  const [tesla, setTesla] = useState([]);\n  const [apple, setApple] = useState([]);\n  const [amazon, setAmazon] = useState([]);\n  const [microsoft, setMicrosoft] = useState([]);\n  const [stockPrice, setStockPrice] = useState(0);\n  const [stockName, setStockName] = useState(\"\");\n  const [dayChange, setDayChange] = useState(\"\");\n  const [percentageChange, setPercentageChange] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [stockId, setStockId] = useState(\"\");\n  const [searchStock, setSearchStock] = useState(\"\");\n  const [accountValue, setAccountValue] = useState(0);\n  const [sumofPurchasedStocks, setSumofPurchasedStocks] = useState(0);\n  const [profitDebt, setProfitDebt] = useState(0);\n  const [sumOfAllStocksPurchased, setSumOfAllStocksPurchased] = useState(\"\");\n  const { userId } = props;\n  // const updatedBalance = (buyingPower - sumOfAllStocksPurchased).toFixed(2);\n\n  useEffect(() => {\n    fetch(`/api/sum/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setSumofPurchasedStocks(data));\n    fetch(\"/api/tesla\")\n      .then((res) => res.json())\n      .then((data) => setTesla(data))\n      .catch((error) => console.log(error));\n    fetch(\"/api/amazon\")\n      .then((res) => res.json())\n      .then((data) => setAmazon(data))\n      .catch((error) => console.log(error));\n    fetch(\"/api/microsoft\")\n      .then((res) => res.json())\n      .then((data) => setMicrosoft(data))\n      .catch((error) => console.log(error));\n    fetch(\"/api/apple\")\n      .then((res) => res.json())\n      .then((data) => setApple(data))\n      .catch((error) => console.log(error));\n    fetch(`/api/sumofallstockspurchased/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setSumOfAllStocksPurchased(data))\n      .catch((error) => console.log(error));\n    fetch(`/api/purchased/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setPurchasedStocks(data))\n      .catch((error) => console.log(error));\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: userId,\n      }),\n    };\n    fetch(\"/api/userbalance\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => setBuyingPower(data));\n    setAccountValue(20000 - sumOfAllStocksPurchased + sumOfAllStocksPurchased);\n  }, []);\n\n  function handleSearch(e) {\n    setSearchStock(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`/api/searchStock/${searchStock}`)\n      .then((res) => res.json())\n      .then((data) => setSearchStock(data))\n      .catch((error) => console.log(error));\n  }\n\n  let stocksPurchased = [];\n  for (let i = 0; i < purchasedStocks.length; i++) {\n    stocksPurchased.push(\n      <StockCard\n        key={purchasedStocks[i][0]}\n        stockId={purchasedStocks[i][0]}\n        symbol={purchasedStocks[i][1]}\n        stockName={purchasedStocks[i][2]}\n        price={purchasedStocks[i][3]}\n        dayChange={purchasedStocks[i][4]}\n        percentChange={purchasedStocks[i][5]}\n        time={purchasedStocks[i][6]}\n        shares={purchasedStocks[i][7]}\n        setPrice={setStockPrice}\n        setStockName={setStockName}\n        setSymbol={setSymbol}\n        setDate={setDate}\n        setDayChange={setDayChange}\n        setPercentageChange={setPercentageChange}\n        setStockId={setStockId}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"grid\",\n          justifyContent: \"flex-start\",\n          marginLeft: \"10px\",\n          borderStyle: \"solid\",\n          width: \"400px\",\n          position: \"relative\",\n          top: \"-70px\",\n          left: \"-10px\",\n        }}\n      >\n        <h3>Buying Power: ${buyingPower}</h3>\n        <h3>Account Value: ${accountValue}</h3>\n        <h3>Profit/Debt: ${profitDebt}</h3>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input onChange={handleSearch} placeholder=\"Search\" />\n      </form>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {searchStock.companyName ? (\n          <StockCard\n            symbol={searchStock.symbol}\n            stockName={searchStock.companyName}\n            price={searchStock.latestPrice.toFixed(2)}\n            dayChange={searchStock.change}\n            percentChange={searchStock.changePercent}\n            time={searchStock.latestTime}\n            setPrice={setStockPrice}\n            setStockName={setStockName}\n            setSymbol={setSymbol}\n            setDate={setDate}\n            setDayChange={setDayChange}\n            setPercentageChange={setPercentageChange}\n            setStockId={setStockId}\n          />\n        ) : null}\n      </div>\n      <h1 style={{ fontSize: \"30px\", marginTop: \"15px\" }}> Positions Cards </h1>\n      <header\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        {stocksPurchased}\n      </header>\n      <h1 style={{ fontSize: \"30px\", marginTop: \"15px\" }}> Popular Stocks </h1>\n      <div\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        <StockCard\n          symbol={tesla.symbol}\n          stockName={tesla.companyName}\n          price={\n            tesla.latestPrice ? tesla.latestPrice.toFixed(2) : tesla.latestPrice\n          }\n          dayChange={tesla.change}\n          percentChange={tesla.changePercent}\n          time={tesla.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={amazon.symbol}\n          stockName={amazon.companyName}\n          price={\n            amazon.latestPrice\n              ? amazon.latestPrice.toFixed(2)\n              : amazon.latestPrice\n          }\n          dayChange={amazon.change}\n          percentChange={amazon.changePercent}\n          time={amazon.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={apple.symbol}\n          stockName={apple.companyName}\n          price={\n            apple.latestPrice ? apple.latestPrice.toFixed(2) : apple.latestPrice\n          }\n          dayChange={apple.change}\n          percentChange={apple.changePercent}\n          time={apple.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockCard\n          symbol={microsoft.symbol}\n          stockName={microsoft.companyName}\n          price={\n            microsoft.latestPrice\n              ? microsoft.latestPrice.toFixed(2)\n              : microsoft.latestPrice\n          }\n          dayChange={microsoft.change}\n          percentChange={microsoft.changePercent}\n          time={microsoft.latestTime}\n          setPrice={setStockPrice}\n          setStockName={setStockName}\n          setSymbol={setSymbol}\n          setDate={setDate}\n          setDayChange={setDayChange}\n          setPercentageChange={setPercentageChange}\n          setStockId={setStockId}\n        />\n        <StockModal\n          stockPrice={stockPrice}\n          stockName={stockName}\n          symbol={symbol}\n          dayChange={dayChange}\n          date={date}\n          percentageChange={percentageChange}\n          sumOfAllStocksPurchased={sumOfAllStocksPurchased}\n          purchasedStocks={purchasedStocks}\n          setPurchasedStocks={setPurchasedStocks}\n          stockId={stockId}\n          buyingPower={buyingPower}\n          setBuyingPower={setBuyingPower}\n          userId={userId}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryPage;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js",["61"],"import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\n\nfunction CreateAccount(props) {\n\n  let history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [passwordRequirements, setPasswordRequirements] = useState(\"\");\n  const [copyPassword, setCopyPassword] = useState(\"\");\n  const [noMatch, setNoMatch] = useState(\"\");\n  const [fieldsCheck, setFieldsCheck] = useState(\"\");\n\n  function handleUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleCopyPassword(e) {\n    setCopyPassword(e.target.value);\n  }\n\n  console.log(copyPassword);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    };\n\n    let checkPassword = password;\n    let regex = new RegExp(/[A-Z]/ && /[0-9]/);\n    let result = regex.test(checkPassword);\n\n    console.log(result);\n    if (username && password) {\n      setFieldsCheck(\"\");\n      if ((password.length > 8, result)) {\n        setNoMatch(\"\");\n        setPasswordRequirements(\"\");\n        if (copyPassword == password) {\n          setNoMatch(\"\");\n          fetch(\"api/createaccount\", requestOptions)\n            .then((res) => res.json())\n            .then(props.setPassword(password) && props.setUsername(username) && history.push('/summary'))\n            .catch((error) => setError(error));\n\n        } else {\n          setNoMatch(\n            <p style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n              Password does not match\n            </p>\n          );\n        }\n      } else {\n        setPasswordRequirements(\n          <ul style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n            <li>Password must be 8 or more characters</li>\n            <li>Password must have atleast one uppercase letter</li>\n            <li>Password must have atleast one Number</li>\n          </ul>\n        );\n      }\n    } else {\n      setFieldsCheck(\n        <p style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n          Please Fill In All Fields\n        </p>\n      );\n    }\n  }\n\n  return (\n    <div\n      style={{\n        border: \"15px solid grey\",\n        width: \"400px\",\n        padding: \"50px\",\n        margin: \"0 auto\",\n        display: \"flex\",\n      }}\n    >\n      <div className=\"form-group\">\n        <h1 className=\"display-6\" style={{ marginBottom: \"70px\" }}>\n          Create An Account\n        </h1>\n        <form onSubmit={handleSubmit}>\n          {fieldsCheck}\n          <input\n            className=\"form-control\"\n            onChange={handleUsername}\n            style={{ marginBottom: \"20px\" }}\n            placeholder=\"Username\"\n          />\n          {error ? (\n            <p style={{ fontSize: \"15px\", color: \"red\" }}>\n              Username is already taken\n            </p>\n          ) : null}\n          <input\n            className=\"form-control\"\n            onChange={handlePassword}\n            type=\"password\"\n            style={{ marginBottom: \"20px\" }}\n            placeholder=\"Password\"\n          />\n          <input\n            className=\"form-control\"\n            onChange={handleCopyPassword}\n            type=\"password\"\n            style={{ marginBottom: \"20px\" }}\n            placeholder={\"Re-type Password\"}\n          />\n          {noMatch}\n          {passwordRequirements}\n          <button type=\"submit\" className=\"btn btn-info\">\n            Create Account\n          </button>\n        </form>\n      </div>    \n    </div>\n  );\n}\n\nexport default CreateAccount;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js",["62","63"],"import React, { useEffect, useState } from \"react\";\n\nfunction ReviewOrder(props) {\n  const { selected } = props;\n  const { quantity } = props;\n  const { stockId } = props;\n  const { setQuantity } = props;\n  const { purchasedStocks } = props;\n  const { userId } = props;\n  const { buyingPower } = props;\n  const { setBuyingPower } = props;\n  const [shares, setShares] = useState([]);\n\n  useEffect(() => {\n    for (let i = 0; i < purchasedStocks.length; i++) {\n      if (stockId === purchasedStocks[i][0]) {\n        setShares(purchasedStocks[i][7]);\n      }\n    }\n  });\n\n  function handlePlaceOrder() {\n    let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + props.stockSum;\n    const sellStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: sellingStock,\n      }),\n    };\n\n    const buyStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: boughtStock.toFixed(2),\n      }),\n    };\n\n    if (selected === \"Buy\") {\n      if (props.stockSum > buyingPower) {\n        alert(\"You do not have enough buy power!\");\n      } else {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            symbol: props.symbol,\n            stockName: props.stockName,\n            price: props.stockPrice,\n            day_change: props.dayChange,\n            percentage_change: props.percentageChange,\n            date: props.date,\n            shares: quantity,\n            userId: parseInt(userId),\n            initialPrice: props.stockPrice,\n          }),\n        };\n        fetch(\"/api/buystock\", requestOptions).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", buyStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      }\n    } else if (selected === \"Sell\") {\n      let soldStock = shares - quantity;\n      if (soldStock >= 1) {\n        const requestOptions = {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            shares: soldStock,\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/updatestocks\", requestOptions)\n          .then((res) => res.json())\n          .then((data) =>\n            fetch(`/api/purchased/${userId}`)\n              .then((res) => res.json())\n              .then((data) => props.setPurchasedStocks(data))\n              .catch((error) => console.log(error))\n          );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      } else {\n        const deleteStocks = {\n          method: \"DELETE\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/deleterow\", deleteStocks).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n        );\n      }\n    }\n  }\n\n  let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + Number(props.stockSum);\n  return (\n    <div>\n      <div\n        id=\"reviewModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Review Order </h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div\n              style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              className=\"modal-body\"\n            >\n              <div style={{ fontSize: \"20px\" }}>\n                <p>\n                  {props.selected} {props.quantity} shares of {props.symbol} (\n                  {props.stockName})\n                </p>\n                <p> Limit at ${props.stockPrice}</p>\n                <p>Estimated Total: ${Number(props.stockSum).toFixed(2)}</p>\n                <p>\n                  {\" \"}\n                  Remaining Buy Power: $\n                  {props.selected === \"Buy\"\n                    ? boughtStock.toFixed(2)\n                    : sellingStock.toFixed(2)}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ color: \"black\", fontWeight: \"bolder\" }}\n              onClick={handlePlaceOrder}\n              data-dismiss=\"modal\"\n            >\n              Place Order\n            </button>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewOrder;\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":12,"column":11,"nodeType":"70","messageId":"71","endLine":12,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":20},{"ruleId":"68","severity":1,"message":"73","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":23},{"ruleId":"68","severity":1,"message":"74","line":5,"column":25,"nodeType":"70","messageId":"71","endLine":5,"endColumn":41},{"ruleId":"75","severity":1,"message":"76","line":40,"column":6,"nodeType":"77","endLine":40,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":74,"column":32,"nodeType":"81","messageId":"82","endLine":74,"endColumn":34},{"ruleId":"68","severity":1,"message":"83","line":26,"column":10,"nodeType":"70","messageId":"71","endLine":26,"endColumn":20},{"ruleId":"68","severity":1,"message":"84","line":26,"column":22,"nodeType":"70","messageId":"71","endLine":26,"endColumn":35},{"ruleId":"75","severity":1,"message":"76","line":106,"column":6,"nodeType":"77","endLine":106,"endColumn":8,"suggestions":"85"},{"ruleId":"68","severity":1,"message":"86","line":145,"column":9,"nodeType":"70","messageId":"71","endLine":145,"endColumn":14},{"ruleId":"68","severity":1,"message":"87","line":149,"column":9,"nodeType":"70","messageId":"71","endLine":149,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":50,"column":26,"nodeType":"81","messageId":"82","endLine":50,"endColumn":28},{"ruleId":"68","severity":1,"message":"88","line":7,"column":11,"nodeType":"70","messageId":"71","endLine":7,"endColumn":22},{"ruleId":"75","severity":1,"message":"89","line":14,"column":3,"nodeType":"70","endLine":14,"endColumn":12,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","'allSymbols' is assigned a value but never used.","'totalInvested' is assigned a value but never used.","'setTotalInvested' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'profitDebt' is assigned a value but never used.","'setProfitDebt' is assigned a value but never used.",["94"],"'green' is assigned a value but never used.","'red' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","React Hook useEffect contains a call to 'setShares'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [purchasedStocks, stockId] as a second argument to the useEffect Hook.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [userId]",{"range":"101","text":"102"},{"range":"103","text":"102"},"Add dependencies array: [purchasedStocks, stockId]",{"range":"104","text":"105"},[1429,1431],"[userId]",[3711,3713],[565,565],", [purchasedStocks, stockId]"]