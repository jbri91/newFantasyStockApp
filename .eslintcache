[{"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js":"1","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js":"2","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js":"3","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js":"4","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js":"5","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js":"6","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js":"7","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js":"8","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js":"9","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js":"10","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\index.js":"11","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\App.js":"12","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\NavigationBar.js":"13","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\ReportPage.js":"14","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\HomePage.js":"15","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\CreateAccount.js":"16","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\SummaryPage.js":"17","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\StockCard.js":"18","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\StockModal.js":"19","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\ReviewOrder.js":"20"},{"size":218,"mtime":1611463770885,"results":"21","hashOfConfig":"22"},{"size":3305,"mtime":1621138847415,"results":"23","hashOfConfig":"22"},{"size":5427,"mtime":1621306026750,"results":"24","hashOfConfig":"22"},{"size":5084,"mtime":1621303362390,"results":"25","hashOfConfig":"22"},{"size":9122,"mtime":1621305938747,"results":"26","hashOfConfig":"22"},{"size":1099,"mtime":1621134851257,"results":"27","hashOfConfig":"22"},{"size":4162,"mtime":1621305113385,"results":"28","hashOfConfig":"22"},{"size":3395,"mtime":1621106027135,"results":"29","hashOfConfig":"22"},{"size":3917,"mtime":1621106027134,"results":"30","hashOfConfig":"22"},{"size":6584,"mtime":1621137435806,"results":"31","hashOfConfig":"22"},{"size":218,"mtime":1621394032852,"results":"32","hashOfConfig":"33"},{"size":3381,"mtime":1622937109194,"results":"34","hashOfConfig":"33"},{"size":6249,"mtime":1622937909504,"results":"35","hashOfConfig":"33"},{"size":5151,"mtime":1622940728838,"results":"36","hashOfConfig":"33"},{"size":1100,"mtime":1621394770160,"results":"37","hashOfConfig":"33"},{"size":4162,"mtime":1621394032847,"results":"38","hashOfConfig":"33"},{"size":9141,"mtime":1622938946545,"results":"39","hashOfConfig":"33"},{"size":3975,"mtime":1622400093330,"results":"40","hashOfConfig":"33"},{"size":3395,"mtime":1621394814943,"results":"41","hashOfConfig":"33"},{"size":6906,"mtime":1622764868901,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"wk3tjo",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1tmrxb9",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\index.js",[],["88","89"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\App.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\NavigationBar.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReportPage.js",["90","91","92","93","94"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\SummaryPage.js",["95","96"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\HomePage.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\CreateAccount.js",["97"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockModal.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\StockCard.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\fantasyStockApp\\stock-app\\src\\components\\ReviewOrder.js",["98"],"import React, { useEffect, useState } from \"react\";\n\nfunction ReviewOrder(props) {\n  const { selected } = props;\n  const { quantity } = props;\n  const { stockId } = props;\n  const { purchasedStocks } = props;\n  const { userId } = props;\n  const { buyingPower } = props;\n  const { setBuyingPower } = props;\n  const [shares, setShares] = useState([]);\n\n  useEffect(() => {\n    for (let i = 0; i < purchasedStocks.length; i++) {\n      if (stockId === purchasedStocks[i][0]) {\n        setShares(purchasedStocks[i][7]);\n      }\n    }\n  }, []);\n\n  function handlePlaceOrder() {\n    let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + props.stockSum;\n    const sellStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: sellingStock,\n      }),\n    };\n\n    const buyStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: boughtStock.toFixed(2),\n      }),\n    };\n\n    if (selected === \"Buy\") {\n      if (props.stockSum > buyingPower) {\n        alert(\"You do not have enough buy power!\");\n      } else {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            symbol: props.symbol,\n            stockName: props.stockName,\n            price: props.stockPrice,\n            day_change: props.dayChange,\n            percentage_change: props.percentageChange,\n            date: props.date,\n            shares: quantity,\n            userId: parseInt(userId),\n            initialPrice: props.stockPrice,\n          }),\n        };\n        fetch(\"/api/buystock\", requestOptions).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", buyStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      }\n    } else if (selected === \"Sell\") {\n      let soldStock = shares - quantity;\n      if (soldStock >= 1) {\n        const requestOptions = {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            shares: soldStock,\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/updatestocks\", requestOptions)\n          .then((res) => res.json())\n          .then((data) =>\n            fetch(`/api/purchased/${userId}`)\n              .then((res) => res.json())\n              .then((data) => props.setPurchasedStocks(data))\n              .catch((error) => console.log(error))\n          );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      } else {\n        const deleteStocks = {\n          method: \"DELETE\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/deleterow\", deleteStocks).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n        );\n      }\n    }\n  }\n\n  let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + Number(props.stockSum);\n  return (\n    <div>\n      <div\n        id=\"reviewModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Review Order </h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div\n              style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              className=\"modal-body\"\n            >\n              <div style={{ fontSize: \"20px\" }}>\n                <p>\n                  {props.selected} {props.quantity} shares of {props.symbol} (\n                  {props.stockName})\n                </p>\n                <p> Limit at ${props.stockPrice}</p>\n                <p>Estimated Total: ${Number(props.stockSum).toFixed(2)}</p>\n                <p>\n                  {\" \"}\n                  Remaining Buy Power: $\n                  {props.selected === \"Buy\"\n                    ? boughtStock.toFixed(2)\n                    : sellingStock.toFixed(2)}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ color: \"black\", fontWeight: \"bolder\" }}\n              onClick={handlePlaceOrder}\n              data-dismiss=\"modal\"\n            >\n              Place Order\n            </button>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewOrder;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\index.js",[],["99","100"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\App.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\NavigationBar.js",["101","102","103","104"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\ReportPage.js",["105","106","107","108","109","110"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\HomePage.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\CreateAccount.js",["111"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CreateAccount(props) {\n  console.log(props);\n  let history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [passwordRequirements, setPasswordRequirements] = useState(\"\");\n  const [copyPassword, setCopyPassword] = useState(\"\");\n  const [noMatch, setNoMatch] = useState(\"\");\n  const [fieldsCheck, setFieldsCheck] = useState(\"\");\n\n  function handleUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleCopyPassword(e) {\n    setCopyPassword(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    };\n\n    let checkPassword = password;\n    let regex = new RegExp(/[A-Z]/ && /[0-9]/);\n    let result = regex.test(checkPassword);\n\n    console.log(result);\n    if (username && password) {\n      setFieldsCheck(\"\");\n      if ((password.length > 8, result)) {\n        setNoMatch(\"\");\n        setPasswordRequirements(\"\");\n        if (copyPassword === password) {\n          setNoMatch(\"\");\n          fetch(\"api/createaccount\", requestOptions);\n          \n            fetch(\"/api/username\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                usernameCredential: username,\n                password: password,\n              }),\n            })\n              .then((res) => res.json())\n              .then(\n                (data) =>\n                  props.setAuthentication(data[1]) &\n                  props.setUserId(data[0]) & (localStorage.id = data[0]) \n              );\n          \n\n          history.push(\"/summary\");\n        } else {\n          setNoMatch(\n            <p style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n              Password does not match\n            </p>\n          );\n        }\n      } else {\n        setPasswordRequirements(\n          <ul style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n            <li>Password must be 8 or more characters</li>\n            <li>Password must have atleast one uppercase letter</li>\n            <li>Password must have atleast one Number</li>\n          </ul>\n        );\n      }\n    } else {\n      setFieldsCheck(\n        <p style={{ fontSize: \"15px\", color: \"red\", marginRight: \"30px\" }}>\n          Please Fill In All Fields\n        </p>\n      );\n    }\n  }\n\n  return (\n    <div\n      style={{\n        border: \"15px solid grey\",\n        width: \"400px\",\n        padding: \"50px\",\n        margin: \"0 auto\",\n        display: \"flex\",\n      }}\n    >\n      <div className=\"form-group\">\n        <h1 className=\"display-6\" style={{ marginBottom: \"70px\" }}>\n          Create An Account\n        </h1>\n        <form onSubmit={handleSubmit}>\n          {fieldsCheck}\n          <input\n            className=\"form-control\"\n            onChange={handleUsername}\n            style={{ marginBottom: \"20px\" }}\n            placeholder=\"Username\"\n          />\n          {error ? (\n            <p style={{ fontSize: \"15px\", color: \"red\" }}>\n              Username is already taken\n            </p>\n          ) : null}\n          <input\n            className=\"form-control\"\n            onChange={handlePassword}\n            type=\"password\"\n            style={{ marginBottom: \"20px\" }}\n            placeholder=\"Password\"\n          />\n          <input\n            className=\"form-control\"\n            onChange={handleCopyPassword}\n            type=\"password\"\n            style={{ marginBottom: \"20px\" }}\n            placeholder={\"Re-type Password\"}\n          />\n          {noMatch}\n          {passwordRequirements}\n          <button type=\"submit\" className=\"btn btn-info\">\n            Create Account\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateAccount;\n","C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\SummaryPage.js",["112","113"],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\StockCard.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\StockModal.js",[],"C:\\Users\\Johnny\\Desktop\\Code Projects\\React Projects\\newFantasyStockApp\\fantasyStockApp\\src\\components\\ReviewOrder.js",["114"],"import React, { useEffect, useState } from \"react\";\n\nfunction ReviewOrder(props) {\n  const { selected } = props;\n  const { quantity } = props;\n  const { stockId } = props;\n  const { purchasedStocks } = props;\n  const { setPurchasedStocks } = props;\n  const { userId } = props;\n  const { buyingPower } = props;\n  const { setBuyingPower } = props;\n  const [shares, setShares] = useState([]);\n  \n  // console.log(shares)\n\n  useEffect(() => {\n    for (let i = 0; i < purchasedStocks.length; i++) {\n      if (stockId === purchasedStocks[i][0]) {\n        setShares(purchasedStocks[i][7]);\n      }\n    }\n\n    fetch(`/api/purchased/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setPurchasedStocks(data))\n      .catch((error) => console.log(error));\n  }, [shares, purchasedStocks]);\n\n  function handlePlaceOrder() {\n    let boughtStock = buyingPower - props.stockSum;\n    let sellingStock = Number(buyingPower) + props.stockSum;\n    const sellStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: sellingStock,\n      }),\n    };\n\n    const buyStock = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: parseInt(userId),\n        boughtStock: boughtStock.toFixed(2),\n      }),\n    };\n\n    if (selected === \"Buy\") {\n      if (props.stockSum > buyingPower) {\n        alert(\"You do not have enough buy power!\");\n      } else {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            symbol: props.symbol,\n            stockName: props.stockName,\n            price: props.stockPrice,\n            day_change: props.dayChange,\n            percentage_change: props.percentageChange,\n            date: props.date,\n            shares: quantity,\n            userId: parseInt(userId),\n            initialPrice: props.stockPrice,\n          }),\n        };\n        fetch(\"/api/buystock\", requestOptions).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", buyStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: parseInt(userId),\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      }\n    } else if (selected === \"Sell\") {\n      let soldStock = shares - quantity;\n      console.log(shares, quantity, soldStock);\n      if (soldStock >= 1) {\n        const requestOptions = {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            shares: soldStock,\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/updatestocks\", requestOptions)\n          .then((res) => res.json())\n          .then((data) =>\n            fetch(`/api/purchased/${userId}`)\n              .then((res) => res.json())\n              .then((data) => props.setPurchasedStocks(data))\n              .catch((error) => console.log(error))\n          );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: parseInt(userId),\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n            .catch((error) => console.log(error))\n        );\n      } else {\n        const deleteStocks = {\n          method: \"DELETE\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            stock_id: stockId,\n          }),\n        };\n        fetch(\"/api/deleterow\", deleteStocks).then((data) =>\n          fetch(`/api/purchased/${userId}`)\n            .then((res) => res.json())\n            .then((data) => props.setPurchasedStocks(data))\n            .catch((error) => console.log(error))\n        );\n        fetch(\"/api/boughtstock\", sellStock).then((data) =>\n          fetch(\"/api/userbalance\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              userId: userId,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => setBuyingPower(data))\n        );\n      }\n    }\n  }\n\n  let boughtStock = buyingPower - props.stockSum;\n  let sellingStock = Number(buyingPower) + Number(props.stockSum);\n  return (\n    <div>\n      <div\n        id=\"reviewModal\"\n        className=\"modal fade\"\n        role=\"dialog\"\n        style={{ color: \"black\" }}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\"> Review Order </h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n            <div\n              style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              className=\"modal-body\"\n            >\n              <div style={{ fontSize: \"20px\" }}>\n                <p>\n                  {props.selected} {props.quantity} shares of {props.symbol} (\n                  {props.stockName})\n                </p>\n                <p> Limit at ${props.stockPrice}</p>\n                <p>Estimated Total: ${Number(props.stockSum).toFixed(2)}</p>\n                <p>\n                  {\" \"}\n                  Remaining Buy Power: $\n                  {props.selected === \"Buy\"\n                    ? boughtStock.toFixed(2)\n                    : sellingStock.toFixed(2)}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ color: \"black\", fontWeight: \"bolder\" }}\n              onClick={handlePlaceOrder}\n              data-dismiss=\"modal\"\n            >\n              Place Order\n            </button>\n            <div\n              className=\"modal-footer\"\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewOrder;\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"123","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":23},{"ruleId":"119","severity":1,"message":"124","line":5,"column":25,"nodeType":"121","messageId":"122","endLine":5,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":40,"column":6,"nodeType":"127","endLine":40,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":72,"column":32,"nodeType":"131","messageId":"132","endLine":72,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":73,"column":40,"nodeType":"131","messageId":"132","endLine":73,"endColumn":42},{"ruleId":"125","severity":1,"message":"126","line":100,"column":6,"nodeType":"127","endLine":100,"endColumn":8,"suggestions":"133"},{"ruleId":"119","severity":1,"message":"134","line":9,"column":17,"nodeType":"121","messageId":"122","endLine":9,"endColumn":25},{"ruleId":"125","severity":1,"message":"135","line":19,"column":6,"nodeType":"127","endLine":19,"endColumn":8,"suggestions":"136"},{"ruleId":"115","replacedBy":"137"},{"ruleId":"117","replacedBy":"138"},{"ruleId":"119","severity":1,"message":"139","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":38},{"ruleId":"119","severity":1,"message":"140","line":19,"column":10,"nodeType":"121","messageId":"122","endLine":19,"endColumn":20},{"ruleId":"119","severity":1,"message":"141","line":19,"column":22,"nodeType":"121","messageId":"122","endLine":19,"endColumn":35},{"ruleId":"125","severity":1,"message":"142","line":58,"column":6,"nodeType":"127","endLine":58,"endColumn":14,"suggestions":"143"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"123","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":23},{"ruleId":"119","severity":1,"message":"124","line":5,"column":25,"nodeType":"121","messageId":"122","endLine":5,"endColumn":41},{"ruleId":"119","severity":1,"message":"144","line":10,"column":11,"nodeType":"121","messageId":"122","endLine":10,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":41,"column":6,"nodeType":"127","endLine":41,"endColumn":19,"suggestions":"145"},{"ruleId":"129","severity":1,"message":"130","line":73,"column":32,"nodeType":"131","messageId":"132","endLine":73,"endColumn":34},{"ruleId":"119","severity":1,"message":"134","line":9,"column":17,"nodeType":"121","messageId":"122","endLine":9,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":73,"column":40,"nodeType":"131","messageId":"132","endLine":73,"endColumn":42},{"ruleId":"125","severity":1,"message":"126","line":100,"column":6,"nodeType":"127","endLine":100,"endColumn":8,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"147","line":27,"column":6,"nodeType":"127","endLine":27,"endColumn":31,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'allSymbols' is assigned a value but never used.","Identifier","unusedVar","'totalInvested' is assigned a value but never used.","'setTotalInvested' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["152"],"'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'purchasedStocks' and 'stockId'. Either include them or remove the dependency array.",["153"],["149"],["150"],"'useReducer' is defined but never used.","'loginError' is assigned a value but never used.","'setLoginError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createPassword' and 'createUsername'. Either include them or remove the dependency array.",["154"],"'fetchBuyingPower' is assigned a value but never used.",["155"],["156"],"React Hook useEffect has missing dependencies: 'setPurchasedStocks', 'stockId', and 'userId'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"158","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [userId]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [purchasedStocks, stockId]",{"range":"173","text":"174"},"Update the dependencies array to be: [createPassword, createUsername, userId]",{"range":"175","text":"176"},"Update the dependencies array to be: [buyingPower, userId]",{"range":"177","text":"178"},{"range":"179","text":"171"},"Update the dependencies array to be: [shares, purchasedStocks, userId, stockId, setPurchasedStocks]",{"range":"180","text":"181"},[1429,1431],"[userId]",[3351,3353],[534,536],"[purchasedStocks, stockId]",[1793,1801],"[createPassword, createUsername, userId]",[1479,1492],"[buyingPower, userId]",[3351,3353],[767,792],"[shares, purchasedStocks, userId, stockId, setPurchasedStocks]"]